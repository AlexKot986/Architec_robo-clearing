// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RoboClearingApi.Contexts;

#nullable disable

namespace RoboClearingApi.Migrations
{
    [DbContext(typeof(RoboClearingPostgreSqlDBContext))]
    [Migration("20240904171832_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RoboClearingApi.Models.Domain.Robot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Model")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("model");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("name");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("robots", (string)null);
                });

            modelBuilder.Entity("RoboClearingApi.Models.Domain.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("rooms", (string)null);
                });

            modelBuilder.Entity("RoboClearingApi.Models.Domain.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<TimeOnly>("End")
                        .HasColumnType("time without time zone")
                        .HasColumnName("end");

                    b.Property<int>("RobotId")
                        .HasColumnType("integer")
                        .HasColumnName("robot_id");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer")
                        .HasColumnName("room_id");

                    b.Property<TimeOnly>("Start")
                        .HasColumnType("time without time zone")
                        .HasColumnName("start");

                    b.Property<int>("Type")
                        .HasMaxLength(20)
                        .HasColumnType("integer")
                        .HasColumnName("clearing_type");

                    b.Property<int[]>("WeekDays")
                        .IsRequired()
                        .HasColumnType("integer[]")
                        .HasColumnName("week_days");

                    b.HasKey("Id");

                    b.HasIndex("RobotId");

                    b.HasIndex("RoomId");

                    b.ToTable("schedules", (string)null);
                });

            modelBuilder.Entity("RoboClearingApi.Models.Domain.Schedule", b =>
                {
                    b.HasOne("RoboClearingApi.Models.Domain.Robot", "Robot")
                        .WithMany()
                        .HasForeignKey("RobotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoboClearingApi.Models.Domain.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Robot");

                    b.Navigation("Room");
                });
#pragma warning restore 612, 618
        }
    }
}
